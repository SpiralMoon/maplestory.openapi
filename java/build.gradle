plugins {
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id 'org.jreleaser' version '1.17.0'
}

group = 'dev.spiralmoon'
version = '3.4.1'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.38'

    implementation 'org.jsoup:jsoup:1.20.1'
    implementation 'com.squareup.retrofit2:retrofit:3.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:3.0.0'
    implementation 'com.squareup.retrofit2:converter-scalars:3.0.0'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    annotationProcessor 'org.projectlombok:lombok:1.18.38'
}

task unitTest(type: Test) {
    def apiKey = project.findProperty('apiKey')
    systemProperty('API_KEY', apiKey)

    useJUnitPlatform()
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from tasks.javadoc.destinationDir
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            groupId = 'dev.spiralmoon'
            version = '3.4.1'
            artifactId = 'maplestory-openapi'

            pom {
                name.set('MapleStory OpenAPI')
                description.set('This Java library enables the use of the MapleStory OpenAPI of Nexon.')
                url.set('https://github.com/SpiralMoon/maplestory.openapi')

                licenses {
                    license {
                        name.set('MIT License')
                        url.set('https://opensource.org/licenses/MIT')
                    }
                }

                developers {
                    developer {
                        id.set('SpiralMoon')
                        name.set('SpiralMoon')
                        email.set('dev.spiralmoon@gmail.com')
                    }
                }

                scm {
                    connection.set('scm:git:git://github.com/SpiralMoon/maplestory.openapi.git')
                    developerConnection.set('scm:git:ssh://github.com:SpiralMoon/maplestory.openapi.git')
                    url.set('https://github.com/SpiralMoon/maplestory.openapi')
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

def githubToken = project.findProperty('githubToken')

def gpgPublicKey = project.findProperty('gpgPublicKey')
def gpgSecretKey = project.findProperty('gpgSecretKey')
def gpgPassphrase = project.findProperty('gpgPassphrase')

def centralUsername = project.findProperty('centralUsername')
def centralPassword = project.findProperty('centralPassword')

jreleaser {
    project {
        gitRootSearch = true
    }

    release {
        github {
            token.set(githubToken)
        }
    }

    signing {
        active = 'ALWAYS'
        armored = true
        mode = 'MEMORY'
        publicKey.set(gpgPublicKey)
        secretKey.set(gpgSecretKey)
        passphrase.set(gpgPassphrase)
    }

    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    username.set(centralUsername)
                    password.set(centralPassword)
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}
